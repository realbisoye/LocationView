b3507ef6a6f1959217ec94346243611b
"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactNative = require("react-native");






var _decorateMapComponent = _interopRequireWildcard(require("./decorateMapComponent"));var _jsxFileName = "/Users/bisoyeatolagbe/projects/bisoye/LocationView/node_modules/react-native-maps/lib/components/MapOverlay.js";function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;} else {var newObj = {};if (obj != null) {for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};if (desc.get || desc.set) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}}newObj.default = obj;return newObj;}}function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};var ownKeys = Object.keys(source);if (typeof Object.getOwnPropertySymbols === 'function') {ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {return Object.getOwnPropertyDescriptor(source, sym).enumerable;}));}ownKeys.forEach(function (key) {_defineProperty(target, key, source[key]);});}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}




var viewConfig = {
  uiViewClassName: 'AIR<provider>MapOverlay',
  validAttributes: {
    image: true } };



var propTypes = _objectSpread({},
_reactNative.View.propTypes, {

  image: _propTypes.default.any.isRequired,

  bounds: _propTypes.default.arrayOf(_propTypes.default.array.isRequired).isRequired });var


MapOverlay = function (_Component) {_inherits(MapOverlay, _Component);function MapOverlay() {_classCallCheck(this, MapOverlay);return _possibleConstructorReturn(this, _getPrototypeOf(MapOverlay).apply(this, arguments));}_createClass(MapOverlay, [{ key: "render", value: function render()

    {
      var image;
      if (this.props.image) {
        if (typeof this.props.image.startsWith === 'function' &&
        this.props.image.startsWith('http')) {
          image = this.props.image;
        } else {
          image = _reactNative.Image.resolveAssetSource(this.props.image) || {};
          image = image.uri;
        }
      }

      var AIRMapOverlay = this.getAirComponent();

      return (
        _react.default.createElement(AIRMapOverlay, _extends({},
        this.props, {
          image: image,
          style: [styles.overlay, this.props.style], __source: { fileName: _jsxFileName, lineNumber: 47 } })));


    } }]);return MapOverlay;}(_react.Component);


MapOverlay.propTypes = propTypes;
MapOverlay.viewConfig = viewConfig;

var styles = _reactNative.StyleSheet.create({
  overlay: {
    position: 'absolute',
    backgroundColor: 'transparent' } });



MapOverlay.Animated = _reactNative.Animated.createAnimatedComponent(MapOverlay);var _default =

(0, _decorateMapComponent.default)(MapOverlay, {
  componentType: 'Overlay',
  providers: {
    google: {
      ios: _decorateMapComponent.SUPPORTED,
      android: _decorateMapComponent.USES_DEFAULT_IMPLEMENTATION } } });exports.default = _default;