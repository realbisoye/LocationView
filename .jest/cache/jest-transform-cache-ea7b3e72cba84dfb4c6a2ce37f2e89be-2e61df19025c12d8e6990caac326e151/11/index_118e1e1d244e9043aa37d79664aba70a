cd6a803d63b2d8c64e3aef5267c34a53
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.toggleMarkerForm = exports.deleteMarker = exports.updateMarker = exports.createMarker = exports.fetchMarkers = exports.actionTypes = void 0;var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));var _apiRequest = _interopRequireDefault(require("../apiRequest"));

var actionTypes = {
  LOADING: 'LOADING',
  CREATE_MARKER: 'CREATE_MARKER',
  RECEIVE_MARKERS: 'RECEIVE_MARKERS',
  UPDATE_MARKER: 'UPDATE_MARKER',
  DELETE_MARKER: 'DELETE_MARKER',
  ERROR: 'ERROR',
  TOGGLE_MARKER_FORM: 'TOGGLE_MARKER_FORM' };exports.actionTypes = actionTypes;


var fetchMarkers = function fetchMarkers() {
  return function _callee(dispatch) {var response;return _regenerator.default.async(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:
            dispatch({
              type: actionTypes.LOADING,
              payload: {} });_context.next = 3;return _regenerator.default.awrap(

            (0, _apiRequest.default)('/markers', 'GET'));case 3:response = _context.sent;if (!
            response.error) {_context.next = 6;break;}return _context.abrupt("return",
            dispatch({
              type: actionTypes.ERROR,
              payload: response.message }));case 6:return _context.abrupt("return",


            dispatch({
              type: actionTypes.RECEIVE_MARKERS,
              payload: response.data }));case 7:case "end":return _context.stop();}}}, null, this);};


};exports.fetchMarkers = fetchMarkers;

var createMarker = function createMarker(data) {
  return function _callee2(dispatch) {var response;return _regenerator.default.async(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:
            dispatch({
              type: actionTypes.LOADING,
              payload: {} });_context2.next = 3;return _regenerator.default.awrap(

            (0, _apiRequest.default)('/markers', 'POST', data));case 3:response = _context2.sent;if (!
            response.error) {_context2.next = 6;break;}return _context2.abrupt("return",
            dispatch({
              type: actionTypes.ERROR,
              payload: response.message }));case 6:return _context2.abrupt("return",


            dispatch({
              type: actionTypes.CREATE_MARKER,
              payload: response.data }));case 7:case "end":return _context2.stop();}}}, null, this);};


};exports.createMarker = createMarker;

var updateMarker = function updateMarker(id, data) {
  return function _callee3(dispatch) {var response;return _regenerator.default.async(function _callee3$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:
            dispatch({
              type: actionTypes.LOADING,
              payload: {} });_context3.next = 3;return _regenerator.default.awrap(

            (0, _apiRequest.default)("/markers/" + id, 'PATCH', data));case 3:response = _context3.sent;if (!
            response.error) {_context3.next = 6;break;}return _context3.abrupt("return",
            dispatch({
              type: actionTypes.ERROR,
              payload: response.message }));case 6:return _context3.abrupt("return",


            dispatch({
              type: actionTypes.UPDATE_MARKER,
              payload: response.data }));case 7:case "end":return _context3.stop();}}}, null, this);};


};exports.updateMarker = updateMarker;

var deleteMarker = function deleteMarker(id) {
  return function _callee4(dispatch) {var response;return _regenerator.default.async(function _callee4$(_context4) {while (1) {switch (_context4.prev = _context4.next) {case 0:
            dispatch({
              type: actionTypes.LOADING,
              payload: {} });_context4.next = 3;return _regenerator.default.awrap(

            (0, _apiRequest.default)("/markers/" + id, 'DELETE'));case 3:response = _context4.sent;if (!
            response.error) {_context4.next = 6;break;}return _context4.abrupt("return",
            dispatch({
              type: actionTypes.ERROR,
              payload: response.message }));case 6:return _context4.abrupt("return",


            dispatch({
              type: actionTypes.DELETE_MARKER,
              payload: id }));case 7:case "end":return _context4.stop();}}}, null, this);};


};exports.deleteMarker = deleteMarker;

var toggleMarkerForm = function toggleMarkerForm(open) {
  return function (dispatch) {
    dispatch({
      type: actionTypes.TOGGLE_MARKER_FORM,
      payload: { open: open } });

  };
};exports.toggleMarkerForm = toggleMarkerForm;