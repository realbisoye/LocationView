eefdd141dd4bdd7af5d852352d763a38
"use strict";

/* istanbul ignore next */var cov_1vdl5u6nb8 = function () {
  var path = "/Users/bisoyeatolagbe/projects/bisoye/LocationView/app/container/main.js",
      hash = "49060614a8da6d71982ff440da90d137cc1727dd",
      Function = function () {}.constructor,
      global = new Function('return this')(),
      gcv = "__coverage__",
      coverageData = {
    path: "/Users/bisoyeatolagbe/projects/bisoye/LocationView/app/container/main.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 42
        },
        end: {
          line: 1,
          column: 97
        }
      },
      "1": {
        start: {
          line: 1,
          column: 128
        },
        end: {
          line: 1,
          column: 184
        }
      },
      "2": {
        start: {
          line: 1,
          column: 185
        },
        end: {
          line: 1,
          column: 247
        }
      },
      "3": {
        start: {
          line: 1,
          column: 247
        },
        end: {
          line: 1,
          column: 272
        }
      },
      "4": {
        start: {
          line: 1,
          column: 290
        },
        end: {
          line: 1,
          column: 312
        }
      },
      "5": {
        start: {
          line: 2,
          column: 14
        },
        end: {
          line: 2,
          column: 60
        }
      },
      "6": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 65
        }
      },
      "7": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 12,
          column: 1
        }
      },
      "8": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "9": {
        start: {
          line: 14,
          column: 25
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "10": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 17,
          column: 3
        }
      },
      "11": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "12": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "13": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 41
        }
      },
      "14": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "15": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 45
        }
      },
      "16": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "17": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 39
        }
      },
      "18": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 32,
          column: 3
        }
      },
      "19": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 45
        }
      },
      "20": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 34,
          column: 150
        }
      },
      "21": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 96
        }
      },
      "22": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "23": {
        start: {
          line: 38,
          column: 14
        },
        end: {
          line: 38,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "mapStateToProps",
        decl: {
          start: {
            line: 5,
            column: 31
          },
          end: {
            line: 5,
            column: 46
          }
        },
        loc: {
          start: {
            line: 5,
            column: 54
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "mapDispatchToProps",
        decl: {
          start: {
            line: 14,
            column: 34
          },
          end: {
            line: 14,
            column: 52
          }
        },
        loc: {
          start: {
            line: 14,
            column: 63
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "getMarkers",
        decl: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 15,
            column: 38
          }
        },
        loc: {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 3
          }
        },
        line: 15
      },
      "3": {
        name: "addMarker",
        decl: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 18,
            column: 36
          }
        },
        loc: {
          start: {
            line: 18,
            column: 43
          },
          end: {
            line: 20,
            column: 3
          }
        },
        line: 18
      },
      "4": {
        name: "updateMarker",
        decl: {
          start: {
            line: 22,
            column: 30
          },
          end: {
            line: 22,
            column: 42
          }
        },
        loc: {
          start: {
            line: 22,
            column: 53
          },
          end: {
            line: 24,
            column: 3
          }
        },
        line: 22
      },
      "5": {
        name: "deleteMarker",
        decl: {
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 26,
            column: 42
          }
        },
        loc: {
          start: {
            line: 26,
            column: 47
          },
          end: {
            line: 28,
            column: 3
          }
        },
        line: 26
      },
      "6": {
        name: "toggleMarkerForm",
        decl: {
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 30,
            column: 50
          }
        },
        loc: {
          start: {
            line: 30,
            column: 57
          },
          end: {
            line: 32,
            column: 3
          }
        },
        line: 30
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _interopRequireDefault = /* istanbul ignore next */(cov_1vdl5u6nb8.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));var _interopRequireWildcard = /* istanbul ignore next */(cov_1vdl5u6nb8.s[1]++, require("@babel/runtime/helpers/interopRequireWildcard")); /* istanbul ignore next */cov_1vdl5u6nb8.s[2]++;
Object.defineProperty(exports, "__esModule", { value: true }); /* istanbul ignore next */cov_1vdl5u6nb8.s[3]++;
exports.default = void 0;var _reactRedux = /* istanbul ignore next */(cov_1vdl5u6nb8.s[4]++, require("react-redux"));
var actions = /* istanbul ignore next */(cov_1vdl5u6nb8.s[5]++, _interopRequireWildcard(require("../actions")));
var _main = /* istanbul ignore next */(cov_1vdl5u6nb8.s[6]++, _interopRequireDefault(require("../components/main")));

/* istanbul ignore next */cov_1vdl5u6nb8.s[7]++;
var mapStateToProps = function mapStateToProps(state) {
  /* istanbul ignore next */cov_1vdl5u6nb8.f[0]++;
  cov_1vdl5u6nb8.s[8]++;

  return {
    markers: state.markers,
    loading: state.loading,
    openForm: state.openForm,
    error: state.error };
};

/* istanbul ignore next */cov_1vdl5u6nb8.s[9]++;
var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  /* istanbul ignore next */cov_1vdl5u6nb8.f[1]++;
  cov_1vdl5u6nb8.s[10]++;

  var getMarkers = function getMarkers() {
    /* istanbul ignore next */cov_1vdl5u6nb8.f[2]++;
    cov_1vdl5u6nb8.s[11]++;

    dispatch(actions.fetchMarkers());
  };
  /* istanbul ignore next */cov_1vdl5u6nb8.s[12]++;
  var addMarker = function addMarker(data) {
    /* istanbul ignore next */cov_1vdl5u6nb8.f[3]++;
    cov_1vdl5u6nb8.s[13]++;

    dispatch(actions.createMarker(data));
  };

  /* istanbul ignore next */cov_1vdl5u6nb8.s[14]++;
  var updateMarker = function updateMarker(id, data) {
    /* istanbul ignore next */cov_1vdl5u6nb8.f[4]++;
    cov_1vdl5u6nb8.s[15]++;

    dispatch(actions.updateMarker(id, data));
  };

  /* istanbul ignore next */cov_1vdl5u6nb8.s[16]++;
  var deleteMarker = function deleteMarker(id) {
    /* istanbul ignore next */cov_1vdl5u6nb8.f[5]++;
    cov_1vdl5u6nb8.s[17]++;

    dispatch(actions.deleteMarker(id));
  };

  /* istanbul ignore next */cov_1vdl5u6nb8.s[18]++;
  var toggleMarkerForm = function toggleMarkerForm(open) {
    /* istanbul ignore next */cov_1vdl5u6nb8.f[6]++;
    cov_1vdl5u6nb8.s[19]++;

    dispatch(actions.toggleMarkerForm(open));
  };

  /* istanbul ignore next */cov_1vdl5u6nb8.s[20]++;
  return { addMarker: addMarker, getMarkers: getMarkers, updateMarker: updateMarker, deleteMarker: deleteMarker, toggleMarkerForm: toggleMarkerForm };
};

var MainContainer = /* istanbul ignore next */(cov_1vdl5u6nb8.s[21]++, (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_main.default));var _default = /* istanbul ignore next */(cov_1vdl5u6nb8.s[22]++, MainContainer); /* istanbul ignore next */cov_1vdl5u6nb8.s[23]++;
exports.default = _default;